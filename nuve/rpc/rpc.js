"use strict";var clientQueue,connection,exc,amqp=require("amqp"),log=require("./../logger").logger.getLogger("RPC"),TIMEOUT=3e3,corrID=0,map={};exports.connect=function(e){(connection=amqp.createConnection(e)).on("ready",function(){log.info("Connected to rabbitMQ server"),exc=connection.exchange("woogeenRpc",{type:"direct"},function(e){log.info("Exchange "+e.name+" is open"),clientQueue=connection.queue("",function(e){log.info("ClientQueue "+e.name+" is open"),clientQueue.bind("woogeenRpc",clientQueue.name),clientQueue.subscribe(function(e){void 0!==map[e.corrID]&&(map[e.corrID].fn[e.type](e.data,e.err),clearTimeout(map[e.corrID].to),delete map[e.corrID])})})})})},exports.disconnect=function(){connection&&(connection.disconnect(),connection=void 0)};var callbackError=function(e){for(var n in map[e].fn)map[e].fn[n]("timeout");delete map[e]};exports.callRpc=function(e,n,o,c,r){if(clientQueue){map[corrID+=1]={},map[corrID].fn=c,map[corrID].to=setTimeout(callbackError,"number"==typeof r&&r?r:TIMEOUT,corrID);var t={method:n,args:o,corrID:corrID,replyTo:clientQueue.name};exc.publish(e,t)}else for(var i in c)c[i]("rpc client not ready")};