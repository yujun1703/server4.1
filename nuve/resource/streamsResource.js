"use strict";var dataAccess=require("../data_access"),cloudHandler=require("../cloudHandler"),e=require("../errors"),logger=require("./../logger").logger,log=logger.getLogger("StreamsResource");exports.getList=function(r,o,a){log.debug("Representing streams for room ",r.params.room,"and service",r.authData.service._id),cloudHandler.getStreamsInRoom(r.params.room,function(r){if("error"===r)return a(new e.CloudError("Operation failed"));o.send(r)})},exports.get=function(a,n,t){var d=a.params.stream;cloudHandler.getStreamsInRoom(a.params.room,function(r){if("error"===r)return t(new e.CloudError("Operation failed"));for(var o in r)if(r[o].id===d)return log.debug("Found stream",d),void n.send(r[o]);return log.error("Stream",a.params.stream,"does not exist"),t(new e.NotFoundError("Stream not found"))})},exports.addStreamingIn=function(r,o,a){var n=r.body;n.type="streaming",cloudHandler.addStreamingIn(r.params.room,n,function(r){if("error"===r)return a(new e.CloudError("Operation failed"));o.send(r)})},exports.patch=function(r,o,a){var n=r.params.stream,t=r.body;cloudHandler.controlStream(r.params.room,n,t,function(r){if("error"===r)return a(new e.CloudError("Operation failed"));o.send(r)})},exports.delete=function(r,o,a){cloudHandler.deleteStream(r.params.room,r.params.stream,function(r){"error"===r?a(new e.CloudError("Operation failed")):o.send()})};